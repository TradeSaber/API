// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TradeSaber;

namespace TradeSaber.Migrations
{
    [DbContext(typeof(TradeContext))]
    [Migration("20201124091115_UpdatedUser")]
    partial class UpdatedUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TradeSaber.Models.Discord.DiscordUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<string>("Discriminator")
                        .HasColumnType("text")
                        .HasColumnName("discriminator");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_discord_user");

                    b.ToTable("discord_user");
                });

            modelBuilder.Entity("TradeSaber.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp")
                        .HasColumnName("created");

                    b.Property<long>("Experience")
                        .HasColumnType("bigint")
                        .HasColumnName("experience");

                    b.Property<Instant>("LastLoggedIn")
                        .HasColumnType("timestamp")
                        .HasColumnName("last_logged_in");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<string>("ProfileId")
                        .HasColumnType("text")
                        .HasColumnName("profile_id");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("state");

                    b.Property<float>("TirCoin")
                        .HasColumnType("real")
                        .HasColumnName("tir_coin");

                    b.HasKey("ID")
                        .HasName("pk_users");

                    b.HasIndex("ProfileId")
                        .HasDatabaseName("ix_users_profile_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TradeSaber.Models.User", b =>
                {
                    b.HasOne("TradeSaber.Models.Discord.DiscordUser", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("fk_users_discord_user_profile_id");

                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
