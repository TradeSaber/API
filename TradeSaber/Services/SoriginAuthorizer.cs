using Microsoft.Extensions.Logging;
using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text.Json;
using System.Threading.Tasks;
using TradeSaber.Models;
using TradeSaber.Settings;

namespace TradeSaber.Services
{
    public class SoriginAuthorizer
    {
        private readonly ILogger _logger;
        private readonly HttpClient _httpClient;
        private readonly SoriginSettings _soriginSettings;

        public SoriginAuthorizer(ILogger<SoriginAuthorizer> logger, HttpClient httpClient, SoriginSettings soriginSettings)
        {
            _logger = logger;
            _httpClient = httpClient;
            _soriginSettings = soriginSettings;
        }

        /// <summary>
        /// Authorizes a user through Sorigin.
        /// </summary>
        /// <param name="token">The token generated by Sorigin</param>
        /// <returns>If authorization was successful, the Sorigin user.</returns>
        public async Task<SoriginUser?> Authorize(string token)
        {
            string url = $"{_soriginSettings.SoriginAPI}/api/auth/@me";
            _logger.LogInformation(url);
            _logger.LogInformation("Fetching Sorigin user.");
            HttpRequestMessage message = new()
            {
                RequestUri = new Uri(url),
                Method = HttpMethod.Get    
            };
            message.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);

            HttpResponseMessage response = await _httpClient.SendAsync(message);
            if (!response.IsSuccessStatusCode)
            {
                _logger.LogWarning("Could not get Sorigin user! {Code}.", response.StatusCode);
                return null;
            }
            SoriginUser? soriginUser = await JsonSerializer.DeserializeAsync<SoriginUser>(await response.Content.ReadAsStreamAsync(), new JsonSerializerOptions(JsonSerializerDefaults.Web));
            if (soriginUser is null)
            {
                _logger.LogWarning("Could not serialize Sorigin user!");
                return null;
            }
            return soriginUser;
        }
    }
}